suite: addon codeserver
templates:
  - common.yaml
tests:
  - it: default should pass
    asserts:
      - hasDocuments:
          count: 2
      - documentIndex: &DeploymentDocument 0
        isKind:
          of: Deployment
      - documentIndex: 1
        isKind:
          of: Service
      - documentIndex: *DeploymentDocument
        not: true
        equal:
          path: spec.template.spec.containers[0].name
          value: codeserver

  - it: addon enabled should pass
    set:
      addons:
        codeserver:
          enabled: true
          volumeMounts:
            - name: "config"
              mountPath: "/data/config"
    asserts:
      - hasDocuments:
          count: 3
      - documentIndex: 0
        isKind:
          of: Service
      - documentIndex: &DeploymentDocument 1
        isKind:
          of: Deployment
      - documentIndex: &AddonServiceDocument 2
        isKind:
          of: Service
      - documentIndex: *DeploymentDocument
        equal:
          path: spec.template.spec.containers[1].name
          value: codeserver
      - documentIndex: *AddonServiceDocument
        equal:
          path: metadata.name
          value: RELEASE-NAME-common-test

  - it: addon enabled with deployKey should pass
    set:
      addons:
        codeserver:
          enabled: true
          git:
            deployKey: test
          volumeMounts:
            - name: "config"
              mountPath: "/data/config"
    asserts:
      - hasDocuments:
          count: 4
      - documentIndex: &AddonDeployKeySecretDocument 0
        isKind:
          of: Secret
      - documentIndex: &DeploymentDocument 2
        isKind:
          of: Deployment
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            mountPath: /root/.ssh/id_rsa
            name: deploykey
            subPath: id_rsa
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.volumes
          content:
            name: deploykey
            secret:
              defaultMode: 256
              items:
                - key: id_rsa
                  path: id_rsa
              secretName: RELEASE-NAME-common-test-deploykey
      - documentIndex: *AddonDeployKeySecretDocument
        equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-deploykey

  - it: addon enabled with InlineBase64 deployKey should pass
    set:
      addons:
        codeserver:
          enabled: true
          git:
            deployKeyBase64: dGVzdEtleQ==
          volumeMounts:
            - name: "config"
              mountPath: "/data/config"
    asserts:
      - hasDocuments:
          count: 4
      - documentIndex: &AddonDeployKeySecretDocument 0
        isKind:
          of: Secret
      - documentIndex: &DeploymentDocument 2
        isKind:
          of: Deployment
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            mountPath: /root/.ssh/id_rsa
            name: deploykey
            subPath: id_rsa
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.volumes
          content:
            name: deploykey
            secret:
              defaultMode: 256
              items:
                - key: id_rsa
                  path: id_rsa
              secretName: RELEASE-NAME-common-test-deploykey
      - documentIndex: *AddonDeployKeySecretDocument
        equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-deploykey

  - it: addon enabled with existingSecret deployKey should pass
    set:
      addons:
        codeserver:
          enabled: true
          git:
            deployKeySecret: test-secret
          volumeMounts:
            - name: "config"
              mountPath: "/data/config"
    asserts:
      - hasDocuments:
          count: 3
      - documentIndex: &DeploymentDocument 1
        isKind:
          of: Deployment
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            mountPath: /root/.ssh/id_rsa
            name: deploykey
            subPath: id_rsa
      - documentIndex: *DeploymentDocument
        contains:
          path: spec.template.spec.volumes
          content:
            name: deploykey
            secret:
              defaultMode: 256
              items:
                - key: id_rsa
                  path: id_rsa
              secretName: test-secret
